module ExamplePrograms.Simulation.InjProj1 where

open import Data.List using ([])
open import Data.Bool renaming (Bool to ùîπ)
open import Relation.Binary.PropositionalEquality using (_‚â°_; refl)

open import Common.Types
open import Common.BlameLabels
open import Surface.SurfaceLang


{- less precise -}
M = ((($ true of low) ‚à∂ ` Bool of l high at pos 0)
                      ‚à∂ ` Bool of ‚ãÜ at pos 1)
                      ‚à∂ ` Bool of l low at pos 2


‚ä¢M : [] Õæ l low ‚ä¢·¥≥ M ‚¶Ç ` Bool of l low
‚ä¢M = ‚ä¢ann (‚ä¢ann (‚ä¢ann ‚ä¢const (‚â≤-ty (‚âæ-l l‚âºh) ‚â≤-Œπ)) (‚â≤-ty ‚âæ-‚ãÜr ‚â≤-Œπ)) (‚â≤-ty ‚âæ-‚ãÜl ‚â≤-Œπ)


{- more precise -}
M‚Ä≤ = ((($ true of low) ‚à∂ ` Bool of l low at pos 0)
                       ‚à∂ ` Bool of ‚ãÜ at pos 1)
                       ‚à∂ ` Bool of l low at pos 2

‚ä¢M‚Ä≤ : [] Õæ l low ‚ä¢·¥≥ M‚Ä≤ ‚¶Ç ` Bool of l low
‚ä¢M‚Ä≤ = ‚ä¢ann (‚ä¢ann (‚ä¢ann ‚ä¢const (‚â≤-ty ‚âæ-refl ‚â≤-Œπ)) (‚â≤-ty ‚âæ-‚ãÜr ‚â≤-Œπ)) (‚â≤-ty ‚âæ-‚ãÜl ‚â≤-Œπ)

{-
  high ‚äë<: low
  ----------------------------------------- CastL
  true of low ‚ü® high ‚áí ‚ãÜ ‚ü© ‚äë? true of low     ‚ãÜ ‚äë low     ‚ãÜ ‚äë ‚ãÜ
  ----------------------------------------------------------------- CastR
  true of low ‚ü® high ‚áí ‚ãÜ ‚ü© ‚äë? true of low ‚ü® low ‚áí ‚ãÜ ‚ü©

  high ‚äë ‚ãÜ    ‚ãÜ ‚äë ‚ãÜ
  ----------------------------------------------------------------- CastL
  true of low ‚ü® high ‚áí ‚ãÜ ‚ü© ‚äë? true of low ‚ü® low ‚áí ‚ãÜ ‚ü©

cast

  (cast (const true low (` Bool of l high)) (` Bool of l high) (` Bool of ‚ãÜ) (` Bool of ‚ãÜ))

(` Bool of ‚ãÜ) (` Bool of l low) (` Bool of l low)

cast

  (cast (const true low (` Bool of l low)) (` Bool of l low) (` Bool of ‚ãÜ) (` Bool of ‚ãÜ))

(` Bool of ‚ãÜ) (` Bool of l low) (` Bool of l low)
-}
