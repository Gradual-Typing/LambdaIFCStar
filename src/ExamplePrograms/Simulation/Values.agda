module ExamplePrograms.Simulation.Values where

open import Data.List using ([])
open import Data.Unit
open import Data.Bool renaming (Bool to ùîπ)
open import Relation.Binary.PropositionalEquality using (_‚â°_; refl)

open import Common.Types
open import Common.BlameLabels
open import Surface.SurfaceLang

{- less precise -}
M = ($ true of low) ‚à∂ ` Bool of ‚ãÜ at pos 0

‚ä¢M : [] Õæ l low ‚ä¢·¥≥ M ‚¶Ç ` Bool of ‚ãÜ
‚ä¢M = ‚ä¢ann ‚ä¢const (‚â≤-ty ‚âæ-‚ãÜr ‚â≤-Œπ)

{- more precise -}
M‚Ä≤ = ($ true of low) ‚à∂ ` Bool of l low at pos 0

‚ä¢M‚Ä≤ : [] Õæ l low ‚ä¢·¥≥ M‚Ä≤ ‚¶Ç ` Bool of l low
‚ä¢M‚Ä≤ = ‚ä¢ann ‚ä¢const ‚â≤-refl
