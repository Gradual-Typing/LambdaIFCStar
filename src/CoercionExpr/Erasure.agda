module CoercionExpr.Erasure where

open import Data.Nat
open import Data.Unit using (‚ä§; tt)
open import Data.Bool using (true; false) renaming (Bool to ùîπ)
open import Data.List hiding ([_])
open import Data.Product renaming (_,_ to ‚ü®_,_‚ü©)
open import Data.Sum using (_‚äé_)
open import Data.Maybe
open import Relation.Nullary using (¬¨_; Dec; yes; no)
open import Relation.Binary.PropositionalEquality using (_‚â°_; refl)
open import Function using (case_of_)

open import Common.Utils
open import Common.SecurityLabels
open import Common.BlameLabels
open import CoercionExpr.CoercionExpr


œµ‚ÇÅ : ‚àÄ {g‚ÇÅ g‚ÇÇ} ‚Üí ‚ä¢ g‚ÇÅ ‚áí g‚ÇÇ ‚Üí StaticLabel
œµ‚ÇÅ (id (l high)) = high
œµ‚ÇÅ (id (l low))  = low
œµ‚ÇÅ (id ‚ãÜ)        = low
œµ‚ÇÅ ‚Üë            = high
œµ‚ÇÅ (high !)      = high
œµ‚ÇÅ (low  !)      = low
œµ‚ÇÅ (high ?? p)   = high
œµ‚ÇÅ (low  ?? p)   = low

œµ : ‚àÄ {g‚ÇÅ g‚ÇÇ} ‚Üí CExpr g‚ÇÅ ‚áí g‚ÇÇ ‚Üí StaticLabel
œµ (id (l high)) = high
œµ (id (l low))  = low
œµ (id ‚ãÜ)        = low
œµ (cÃÖ ‚®æ c) = œµ cÃÖ ‚ãé œµ‚ÇÅ c
œµ (‚ä• _ _ p) = low  -- placeholder
