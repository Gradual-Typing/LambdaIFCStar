{- Precision relation of the cast calculus -}

module CCExpSub.Precision where

open import Data.Nat
open import Data.Product renaming (_,_ to ⟨_,_⟩)
open import Data.Maybe
open import Data.List
open import Relation.Binary.PropositionalEquality using (_≡_; refl)

open import Common.Utils
open import Common.Types
open import Memory.HeapContext
open import CCExpSub.Statics


infix 4 _;_∣_;_⊢_⊑_

data _;_∣_;_⊢_⊑_ : Context → HeapContext → Context → HeapContext → Term → Term → Set where

  ⊑-var : ∀ {Γ Γ′ Σ Σ′} {x}
      --------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ` x ⊑ ` x

  ⊑-const : ∀ {Γ Γ′ Σ Σ′} {ι} {k : rep ι} {ℓ}
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ $ k of ℓ ⊑ $ k of ℓ

  ⊑-addr : ∀ {Γ Γ′ Σ Σ′} {a ℓ}
      -------------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ addr a of ℓ ⊑ addr a of ℓ

  ⊑-lam : ∀ {Γ Γ′ Σ Σ′} {A A′ N N′} {pc ℓ}
    → A ⊑ A′
    → A ∷ Γ ; Σ ∣ A′ ∷ Γ′ ; Σ′ ⊢ N ⊑ N′
      ----------------------------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ƛ⟦ pc ⟧ A ˙ N of ℓ ⊑ ƛ⟦ pc ⟧ A′ ˙ N′ of ℓ

  ⊑-app : ∀ {Γ Γ′ Σ Σ′} {L L′ M M′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L ⊑ L′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      --------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L · M ⊑ L′ · M′

  ⊑-if : ∀ {Γ Γ′ Σ Σ′} {A A′ L L′ M M′ N N′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L ⊑ L′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ N ⊑ N′
      --------------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ if L A M N ⊑ if L′ A′ M′ N′

  ⊑-let : ∀ {Γ Γ′ Σ Σ′} {M M′ N N′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ N ⊑ N′
      -------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ `let M N ⊑ `let M′ N′

  ⊑-ref : ∀ {Γ Γ′ Σ Σ′} {M M′} {ℓ}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ref⟦ ℓ ⟧ M ⊑ ref⟦ ℓ ⟧ M′

  ⊑-ref? : ∀ {Γ Γ′ Σ Σ′} {M M′} {ℓ}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ref?⟦ ℓ ⟧ M ⊑ ref?⟦ ℓ ⟧ M′

  ⊑-ref✓ : ∀ {Γ Γ′ Σ Σ′} {M M′} {ℓ}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ref✓⟦ ℓ ⟧ M ⊑ ref✓⟦ ℓ ⟧ M′

  ⊑-deref : ∀ {Γ Γ′ Σ Σ′} {M M′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ ! M ⊑ ! M′

  ⊑-assign : ∀ {Γ Γ′ Σ Σ′} {L L′ M M′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L ⊑ L′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L := M ⊑ L′ := M′

  ⊑-assign? : ∀ {Γ Γ′ Σ Σ′} {L L′ M M′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L ⊑ L′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L :=? M ⊑ L′ :=? M′

  ⊑-assign✓ : ∀ {Γ Γ′ Σ Σ′} {L L′ M M′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L ⊑ L′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ---------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ L :=✓ M ⊑ L′ :=✓ M′

  ⊑-prot : ∀ {Γ Γ′ Σ Σ′} {M M′} {ℓ}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      -------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ prot ℓ M ⊑ prot ℓ M′

  ⊑-cast-pc : ∀ {Γ Γ′ Σ Σ′} {M M′} {g g′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      --------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ cast-pc g M ⊑ cast-pc g′ M′

  ⊑-cast-pcₗ : ∀ {Γ Γ′ Σ Σ′} {M M′} {g}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      --------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ cast-pc g M ⊑ M′

  ⊑-cast-pcᵣ : ∀ {Γ Γ′ Σ Σ′} {M M′} {g′}
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      --------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ cast-pc g′ M′

  ⊑-cast : ∀ {Γ Γ′ Σ Σ′} {A A′ B B′ M M′} {c : Cast A ⇒ B} {c′ : Cast A′ ⇒ B′}
    → A ⊑ A′ → B ⊑ B′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⟨ c ⟩ ⊑ M′ ⟨ c′ ⟩

  ⊑-castₗ : ∀ {Γ Γ′ Σ Σ′} {A A′ B M M′} {c : Cast A ⇒ B}
    → A ⊑ A′ → B ⊑ A′
    → ∃[ gc′ ] ∃[ pc′ ] Γ′ ; Σ′ ; gc′ ; pc′ ⊢ M′ ⦂ A′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⟨ c ⟩ ⊑ M′

  ⊑-castᵣ : ∀ {Γ Γ′ Σ Σ′} {A A′ B′ M M′} {c′ : Cast A′ ⇒ B′}
    → A ⊑ A′ → A ⊑ B′
    → ∃[ gc ] ∃[ pc ] Γ ; Σ ; gc ; pc ⊢ M ⦂ A
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′ ⟨ c′ ⟩

  ⊑-sub : ∀ {Γ Γ′ Σ Σ′} {A A′ B B′ M M′} {s : A ↟ B} {s′ : A′ ↟ B′}
    → A ⊑ A′ → B ⊑ B′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ↟⟨ s ⟩ ⊑ M′ ↟⟨ s′ ⟩

  ⊑-subₗ : ∀ {Γ Γ′ Σ Σ′} {A A′ B M M′} {s : A ↟ B}
    → A ⊑ A′ → B ⊑ A′
    → ∃[ gc′ ] ∃[ pc′ ] Γ′ ; Σ′ ; gc′ ; pc′ ⊢ M′ ⦂ A′
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ↟⟨ s ⟩ ⊑ M′

  ⊑-subᵣ : ∀ {Γ Γ′ Σ Σ′} {A A′ B′ M M′} {s′ : A′ ↟ B′}
    → A ⊑ A′ → A ⊑ B′
    → ∃[ gc ] ∃[ pc ] Γ ; Σ ; gc ; pc ⊢ M ⦂ A
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′
      ------------------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ M′ ↟⟨ s′ ⟩

  ⊑-err : ∀ {Γ Γ′ Σ Σ′} {A A′ M} {e}
    → ∃[ gc ] ∃[ pc ] Γ ; Σ ; gc ; pc ⊢ M ⦂ A
    → A ⊑ A′
      ----------------------------------
    → Γ ; Σ ∣ Γ′ ; Σ′ ⊢ M ⊑ error A′ e
